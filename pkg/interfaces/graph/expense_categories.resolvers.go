package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"fmt"

	model "github.com/iota-agency/iota-sdk/pkg/interfaces/graph/gqlmodels"
)

// CreateExpenseCategory is the resolver for the createExpenseCategory field.
func (r *mutationResolver) CreateExpenseCategory(ctx context.Context, input model.CreateExpenseCategory) (*model.ExpenseCategory, error) {
	panic(fmt.Errorf("not implemented: CreateExpenseCategory - createExpenseCategory"))
}

// UpdateExpenseCategory is the resolver for the updateExpenseCategory field.
func (r *mutationResolver) UpdateExpenseCategory(ctx context.Context, id int64, input model.UpdateExpenseCategory) (*model.ExpenseCategory, error) {
	panic(fmt.Errorf("not implemented: UpdateExpenseCategory - updateExpenseCategory"))
}

// DeleteExpenseCategory is the resolver for the deleteExpenseCategory field.
func (r *mutationResolver) DeleteExpenseCategory(ctx context.Context, id int64) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteExpenseCategory - deleteExpenseCategory"))
}

// ExpenseCategory is the resolver for the expenseCategory field.
func (r *queryResolver) ExpenseCategory(ctx context.Context, id int64) (*model.ExpenseCategory, error) {
	panic(fmt.Errorf("not implemented: ExpenseCategory - expenseCategory"))
}

// ExpenseCategories is the resolver for the expenseCategories field.
func (r *queryResolver) ExpenseCategories(ctx context.Context, offset int, limit int, sortBy []string) (*model.PaginatedExpenseCategories, error) {
	panic(fmt.Errorf("not implemented: ExpenseCategories - expenseCategories"))
}

// ExpenseCategoryCreated is the resolver for the expenseCategoryCreated field.
func (r *subscriptionResolver) ExpenseCategoryCreated(ctx context.Context) (<-chan *model.ExpenseCategory, error) {
	panic(fmt.Errorf("not implemented: ExpenseCategoryCreated - expenseCategoryCreated"))
}

// ExpenseCategoryUpdated is the resolver for the expenseCategoryUpdated field.
func (r *subscriptionResolver) ExpenseCategoryUpdated(ctx context.Context) (<-chan *model.ExpenseCategory, error) {
	panic(fmt.Errorf("not implemented: ExpenseCategoryUpdated - expenseCategoryUpdated"))
}

// ExpenseCategoryDeleted is the resolver for the expenseCategoryDeleted field.
func (r *subscriptionResolver) ExpenseCategoryDeleted(ctx context.Context) (<-chan int64, error) {
	panic(fmt.Errorf("not implemented: ExpenseCategoryDeleted - expenseCategoryDeleted"))
}
