type Position {
    id: ID!
    name: String!
    description: String
    createdAt: Time!
    updatedAt: Time!
}

type PaginatedPositions {
    data: [Position!]!
    total: Int64!
}

extend type Query {
    position(id: ID!): Position
    positions(offset: Int!, limit: Int!, sortBy: [String!]): PaginatedPositions!
}

input CreatePosition {
    name: String!
    description: String
}

input UpdatePosition {
    name: String
    description: String
}

extend type Mutation {
    createPosition(input: CreatePosition!): Position!
    updatePosition(id: ID!, input: UpdatePosition!): Position!
    deletePosition(id: ID!): Boolean!
}

extend type Subscription {
    positionCreated: Position!
    positionUpdated: Position!
    positionDeleted: ID!
}