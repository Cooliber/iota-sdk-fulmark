type Product {
    id: ID!
    position: WarehousePosition!
    positionID: ID!
    rfid: String!
    status: String!
    createdAt: Time!
    updatedAt: Time!
}

type PaginatedProducts {
    data: [Product!]!
    total: Int64!
}

input CreateProductsFromTags {
    positionId: ID!
    tags: [String!]!
}

type ValidateProductsResult {
    valid: [String!]!
    invalid: [String!]!
}

extend type Query {
    product(id: ID!): Product
    products(offset: Int!, limit: Int!, sortBy: [String!]): PaginatedProducts!
    createProductsFromTags(input: CreateProductsFromTags!): [Product!]!
    validateProducts(tags: [String!]!): ValidateProductsResult!
}
