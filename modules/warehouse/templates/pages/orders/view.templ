package orders

import (
	"fmt"
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/components/base/button"
	"github.com/iota-agency/iota-sdk/modules/warehouse/viewmodels"
	"github.com/iota-agency/iota-sdk/pkg/composables"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/layouts"
	"github.com/iota-agency/iota-sdk/pkg/types"
)

type ViewPageProps struct {
	*types.PageContext
	Order     *viewmodels.Order
	DeleteURL string
}

templ viewTable(props *ViewPageProps) {
	{{ items := props.Order.Items }}
	<table class="min-w-full table-auto rounded-b-lg table bg-surface-600 text-sm">
		<thead>
			<tr class="bg-surface-500 text-200">
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ props.T("WarehouseOrders.View.Position") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ props.T("WarehouseOrders.View.Barcode") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ props.T("WarehouseOrders.View.InStock") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ props.T("WarehouseOrders.View.Quantity") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ props.T("WarehouseOrders.View.Unit") }
				</th>
			</tr>
		</thead>
		<tbody>
			if len(items) == 0 {
				<tr>
					<td class="p-4 text-center" colspan="5">
						{ composables.MustT(ctx, "WarehouseOrders.View.NoItems") }
					</td>
				</tr>
			} else {
				for _, item := range items {
					<tr>
						<td class="p-4">
							{ item.Position.Title }
						</td>
						<td class="p-4">
							{ item.Position.Barcode }
						</td>
						<td class="p-4">
							{ item.InStock }
						</td>
						<td class="p-4">
							{ item.Quantity() }
						</td>
						<td class="p-4">
							{ item.Position.Unit.Title }
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
}

templ View(props *ViewPageProps) {
	@layouts.Authenticated(props.PageContext) {
		<div class="flex flex-col justify-between h-full">
			@base.Card("m-6") {
				<div class="mb-2">
					<h1 class="text-2xl text-gray-950">
						{ props.Order.LocalizedTitle(props.Localizer) }
					</h1>
				</div>
				<p>
					{ props.T("WarehouseOrders.View.Status") }:
					<b>
						{ props.Order.LocalizedStatus(props.Localizer) }
					</b>
				</p>
				<p x-data="relativeformat">
					{ props.T("WarehouseOrders.View.CreatedAt") }:
					<b x-text={ fmt.Sprintf("format('%s')", props.Order.CreatedAt) }></b>
				</p>
				<div class="overflow-x-auto relative mt-4">
					@viewTable(props)
				</div>
			}
			<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
				@button.Danger(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"hx-delete":    props.DeleteURL,
						"hx-indicator": "this",
					},
				}) {
					{ props.T("Delete") }
				}
			</div>
		</div>
	}
}
