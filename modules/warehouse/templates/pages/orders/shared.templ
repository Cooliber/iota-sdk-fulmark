package orders

import (
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/pkg/composables"
)

type TypeSelectProps struct {
	Label       string
	Placeholder string
	Value       string
	Error       string
	Attrs       templ.Attributes
}

type OrderType struct {
	Label string
	Value string
}

var (
	Types = []OrderType{
		{Label: "WarehouseOrders.Single.Types.In", Value: "in"},
		{Label: "WarehouseOrders.Single.Types.Out", Value: "out"},
	}
)

templ TypeSelect(props *TypeSelectProps) {
	@base.Select(&base.SelectProps{
		Label:       props.Label,
		Placeholder: props.Placeholder,
		Attrs:       props.Attrs,
		Error:       props.Error,
	}) {
		for _, t := range Types {
			if t.Value == props.Value {
				<option value={ t.Value } selected>
					{ composables.MustT(ctx, t.Label) }
				</option>
			} else {
				<option value={ t.Value }>
					{ composables.MustT(ctx, t.Label) }
				</option>
			}
		}
	}
}
