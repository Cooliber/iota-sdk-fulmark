package order_in

import (
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/components/base/button"
	"github.com/iota-agency/iota-sdk/modules/warehouse/viewmodels"
	"github.com/iota-agency/iota-sdk/pkg/composables"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/layouts"
	"github.com/iota-agency/iota-sdk/pkg/types"
)

type PageProps struct {
	*types.PageContext
	Order    *viewmodels.Order
	Errors   map[string]string
	SaveURL  string
	ItemsURL string
}

templ CreateForm(props *PageProps) {
	<form
		class="flex flex-col justify-between h-full"
		hx-post={ props.SaveURL }
		hx-swap="outerHTML"
		hx-indicator="#save-btn"
	>
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			<form
				id="save-form"
				method="post"
				hx-post="/warehouse/units"
				hx-indicator="#save-btn"
				hx-target="#edit-content"
				hx-swap="outerHTML"
			>
				@button.Primary(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":  "_action",
						"value": "save",
						"id":    "save-btn",
					},
				}) {
					{ props.T("Save") }
				}
			</form>
		</div>
	</form>
}

templ OrderItemsTable(pageCtx *types.PageContext) {
	<table class="min-w-full table-auto rounded-b-lg table bg-surface-600 text-sm">
		<thead>
			<tr class="bg-surface-500 text-200">
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ pageCtx.T("WarehouseOrders.Single.Position") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ pageCtx.T("WarehouseOrders.Single.Quantity") }
				</th>
				<th class="px-4 py-3 font-medium text-left border-r-0 border-b-0">
					{ pageCtx.T("WarehouseOrders.Single.Unit") }
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody id="order-items">
			{ children... }
		</tbody>
	</table>
}

templ OrderItemsTableBody(items []*viewmodels.OrderItem) {
	if len(items) == 0 {
		<tr>
			<td class="p-4 text-center" colspan="4">
				{ composables.MustT(ctx, "WarehouseOrders.Single.NoItems") }
			</td>
		</tr>
	} else {
		for _, item := range items {
			<tr>
				<td class="p-4">
					{ item.Position.Title }
				</td>
				<td class="p-4">
					{ item.Quantity }
				</td>
				<td class="p-4">
					{ item.Position.Unit.Title }
				</td>
			</tr>
		}
	}
}

templ New(props *PageProps) {
	@layouts.Authenticated(props.PageContext) {
		@base.Card("m-6") {
			<form
				hx-post={ props.ItemsURL }
				hx-trigger="click"
				hx-swap="innerHTML"
				hx-target="#order-items"
			>
				@base.Combobox(base.ComboboxProps{
					Label:        props.T("WarehouseOrders.Single.Position"),
					Placeholder:  props.T("WarehouseOrders.Single.SearchPosition"),
					Searchable:   true,
					NotFoundText: props.T("WarehouseOrders.Single.NoPositionsFound"),
					Name:         "PositionIDs",
					Multiple:     true,
					Endpoint:     "/warehouse/positions/search",
				})
			</form>
			<div class="overflow-x-auto relative mt-4" id="table">
				@OrderItemsTable(props.PageContext) {
					@OrderItemsTableBody([]*viewmodels.OrderItem{})
				}
			</div>
		}
		@CreateForm(props)
	}
}
