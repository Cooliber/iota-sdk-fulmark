package payments

import (
	"github.com/iota-uz/iota-sdk/components/base"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/viewmodels"
	"github.com/iota-uz/iota-sdk/pkg/types"
)

type AccountSelectProps struct {
	*types.PageContext
	Value    string
	Accounts []*viewmodels.MoneyAccount
	Error    string
	Attrs    templ.Attributes
}

type StageSelectProps struct {
	*types.PageContext
	Value  string
	Stages []*viewmodels.ProjectStage
	Attrs  templ.Attributes
}

templ AccountSelect(props *AccountSelectProps) {
	@base.Select(&base.SelectProps{
		Label:       props.T("Payments.Single.Account"),
		Placeholder: props.T("Payments.Single.SelectAccount"),
		Attrs:       props.Attrs,
		Error:       props.Error,
	}) {
		for _, account := range props.Accounts {
			if account.ID == props.Value {
				<option value={ account.ID } selected>
					{ account.Name }
					{ account.CurrencySymbol }
				</option>
			} else {
				<option value={ account.ID }>
					{ account.Name }
					{ account.CurrencySymbol }
				</option>
			}
		}
	}
}

templ StageSelect(props *StageSelectProps) {
	@base.Select(&base.SelectProps{
		Label:       props.T("Payments.Single.Stage"),
		Placeholder: props.T("Payments.Single.SelectStage"),
		Attrs:       props.Attrs,
	}) {
		for _, stage := range props.Stages {
			if stage.ID == props.Value {
				<option value={ stage.ID } selected>
					{ stage.Name }
				</option>
			} else {
				<option value={ stage.ID }>
					{ stage.Name }
				</option>
			}
		}
	}
}
