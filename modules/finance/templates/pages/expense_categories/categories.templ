package expense_categories

import (
	"fmt"
	"github.com/iota-agency/iota-sdk/components/base"
	"github.com/iota-agency/iota-sdk/components/base/button"
	"github.com/iota-agency/iota-sdk/components/base/input"
	"github.com/iota-agency/iota-sdk/components/base/pagination"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/icons"
	"github.com/iota-agency/iota-sdk/pkg/presentation/templates/layouts"
	"github.com/iota-agency/iota-sdk/pkg/presentation/viewmodels"
	"github.com/iota-agency/iota-sdk/pkg/types"
)

type IndexPageProps struct {
	*types.PageContext
	Categories      []*viewmodels.ExpenseCategory
	PaginationState *pagination.State
}

templ CategoriesTable(props *IndexPageProps) {
	<div class="flex flex-col gap-4 table-wrapper">
		@base.Table(&base.TableProps{
			Columns: []*base.TableColumn{
				{Label: "ExpenseCategories.List.Name", Key: "name"},
				{Label: "ExpenseCategories.List.Amount", Key: "amount"},
				{Label: "UpdatedAt", Key: "updatedAt"},
				{Label: "Actions", Class: "w-16"},
			},
			Localizer: props.Localizer,
		}) {
			for _, category := range props.Categories {
				@base.TableRow() {
					@base.TableCell() {
						{ category.Name }
					}
					@base.TableCell() {
						{ category.AmountWithCurrency }
					}
					@base.TableCell() {
						<div x-data="relativeformat">
							<span x-text={ fmt.Sprintf("format('%s')", category.UpdatedAt) }></span>
						</div>
					}
					@base.TableCell() {
						@button.Secondary(button.Props{
							Fixed: true,
							Size:  button.SizeSM,
							Class: "btn-fixed",
							Href:  fmt.Sprintf("/finance/expense-categories/%s", category.ID),
						}) {
							@icons.PencilSimple(icons.Props{Size: "20"})
						}
					}
				}
			}
		}
		<div class="p-4">
			@pagination.Pagination(props.PaginationState)
		</div>
	</div>
}

templ CategoriesContent(props *IndexPageProps) {
	<div class="m-6">
		<h1 class="text-2xl font-medium">
			{ props.T("NavigationLinks.ExpenseCategories") }
		</h1>
		<div class="mt-5 bg-surface-600 border border-primary rounded-lg">
			<form
				class="p-4 flex items-center gap-3"
				hx-get="/finance/expense-categories"
				hx-trigger="keyup changed delay:500ms from:(form input), change changed from:(form select)"
				hx-target=".table-wrapper"
				hx-swap="outerHTML"
			>
				@input.Text(&input.Props{
					Addon: &input.Addon{
						Position:  input.AddonLeft,
						Component: icons.MagnifyingGlass(icons.Props{Size: "20"}),
					},
					Placeholder: props.T("Search"),
					Attrs: templ.Attributes{
						"name": "name",
					},
				})
				@base.Select(&base.SelectProps{
					Prefix: props.T("PerPage"),
					Attrs: templ.Attributes{
						"name": "limit",
					},
				}) {
					<option>15</option>
					<option>25</option>
					<option>50</option>
					<option>100</option>
				}
				@base.Select(&base.SelectProps{Placeholder: props.T("CreatedAt")}) {
					<option>Вчера</option>
					<option>Позавчера</option>
				}
				@button.Primary(button.Props{
					Size: button.SizeNormal,
					Href: "/finance/expense-categories/new",
					Icon: icons.PlusCircle(icons.Props{Size: "18"}),
				}) {
					{ props.T("ExpenseCategories.List.NewCategory") }
				}
			</form>
			@CategoriesTable(props)
		</div>
	</div>
}

templ Index(props *IndexPageProps) {
	@layouts.Authenticated(props.PageContext) {
		@CategoriesContent(props)
	}
}
