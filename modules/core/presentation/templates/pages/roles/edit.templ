package roles

import (
	"fmt"
	"github.com/iota-uz/iota-sdk/components/base/button"
	"github.com/iota-uz/iota-sdk/components/base/card"
	"github.com/iota-uz/iota-sdk/components/base/dialog"
	"github.com/iota-uz/iota-sdk/components/icons"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/viewmodels"
	"github.com/iota-uz/iota-sdk/pkg/types"
)

type EditFormProps struct {
	*types.PageContext
	Role   *viewmodels.Role
	Errors map[string]string
}

templ EditForm(props *EditFormProps) {
	<div class="flex flex-col justify-between h-full" id="edit-content">
		<div class="flex gap-5 p-6">
			<div class="flex-1 space-y-5">
				@card.Card(card.Props{
					Class: "grid grid-cols-2 gap-4",
				}) {
				}
			</div>
		</div>
		<div
			x-data
			class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4"
		>
			<form
				id="delete-form"
				hx-delete={ fmt.Sprintf("/roles/%s", props.Role.ID) }
				hx-trigger="submit"
				hx-target="closest .content"
				hx-swap="innerHTML"
				hx-indicator="#delete-role-btn"
				hx-disabled-elt="find button"
			>
				@button.Danger(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":   "_action",
						"value":  "delete",
						"type":   "button",
						"@click": "$dispatch('open-delete-role-confirmation')",
						"id":     "delete-role-btn",
					},
				}) {
					{ props.T("Delete") }
				}
			</form>
			<form
				id="save-form"
				method="post"
				hx-post={ fmt.Sprintf("/roles/%s", props.Role.ID) }
				hx-indicator="#save-btn"
				hx-target="#edit-content"
				hx-swap="outerHTML"
			>
				@button.Primary(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":  "_action",
						"value": "save",
						"id":    "save-btn",
					},
				}) {
					{ props.T("Save") }
				}
			</form>
		</div>
	</div>
}

templ Edit(props *EditFormProps) {
	@layouts.Authenticated(props.PageContext) {
		@EditForm(props)
		@dialog.Confirmation(&dialog.Props{
			Heading: props.T("Roles.Single.Delete"),
			Text:    props.T("Roles.Single.DeleteConfirmation"),
			Icon:    icons.Trash(icons.Props{Size: "20"}),
			Action:  "open-delete-role-confirmation",
			Attrs: templ.Attributes{
				"@closing": `({target}) => {
					if (target.returnValue === "confirm") {
						let deleteForm = document.getElementById("delete-form");
						htmx.trigger(deleteForm, "submit");
					}
				}`,
			},
		})
	}
}
