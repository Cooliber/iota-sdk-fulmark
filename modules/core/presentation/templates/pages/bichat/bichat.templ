package bichat

import (
	"github.com/iota-uz/iota-sdk/components/base"
	"github.com/iota-uz/iota-sdk/components/base/button"
	"github.com/iota-uz/iota-sdk/components/base/input"
	"github.com/iota-uz/iota-sdk/components/icons"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/pkg/types"
)

type HistoryItem struct {
	Title string
	Link  string
}

type ChatPageProps struct {
	*types.PageContext
	History     []*HistoryItem
	Suggestions []string
}

templ ModelSelect() {
	@base.Select(&base.SelectProps{}) {
		<option value="1" selected>Модель 1</option>
		<option value="2">Модель 2</option>
		<option value="3">Модель 3</option>
	}
}

templ ChatSideBar(props *ChatPageProps) {
	<!-- Chat Actions -->
	<div class="flex gap-2 border-b border-gray-200 p-4">
		@button.Secondary(button.Props{
			Href:  "/bi-chat/new",
			Class: "flex-grow",
			Icon:  icons.PlusCircle(icons.Props{Size: "18"}),
		}) {
			{ props.T("BiChat.NewDialog") }
		}
		@ModelSelect()
	</div>
	<!-- Main Content -->
	if len(props.History) > 0 {
		<div class="overflow-y-auto">
			<ul class="space-y-2">
				for _, item := range props.History {
					<li class="p-4 border border-gray-200 rounded-md shadow-sm hover:bg-gray-100 cursor-pointer">
						{ item.Title }
					</li>
				}
			</ul>
		</div>
	} else {
		<div class="flex flex-col justify-center items-center px-3 flex-1">
			<img
				src="/assets/images/no-history.png"
				alt="No history image"
			/>
			<p>
				{ props.T("BiChat.History.Empty") }
			</p>
			<p class="text-gray-400">
				{ props.T("BiChat.History.HelpText") }
			</p>
		</div>
	}
}

templ BiChatPage(props *ChatPageProps) {
	<div class="p-6 h-full flex flex-col">
		<!-- Header -->
		<h1 class="text-2xl font-medium">
			{ props.T("BiChat.Title") }
		</h1>
		<div class="flex bg-white flex-1">
			<div class="flex flex-col border-r border-gray-200 w-80">
				@ChatSideBar(props)
			</div>
			<div class="flex flex-col flex-1">
				<div class="flex-1"></div>
				<div class="px-10">
					<div class="grid grid-cols-2 gap-2">
						for _, suggestion := range props.Suggestions {
							@button.Secondary(button.Props{
								Class: "cursor-pointer justify-between w-full",
								Attrs: templ.Attributes{
									"hx-post": "/bi-chat/new",
									"value":   suggestion,
									"name":    "message",
								},
							}) {
								{ suggestion }
								@icons.ArrowCircleUp(icons.Props{Size: "18"})
							}
						}
					</div>
					<div class="my-6">
						@input.Text(&input.Props{
							Placeholder: props.T("BiChat.MessagePlaceholder"),
						})
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ Index(props *ChatPageProps) {
	@layouts.Authenticated(props.PageContext) {
		@BiChatPage(props)
	}
}
