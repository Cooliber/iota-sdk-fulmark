package dashboard

import (
	"github.com/iota-uz/iota-sdk/components/charts"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/pkg/composables"
	"github.com/iota-uz/iota-sdk/pkg/mapping"
)

type IndexPageProps struct {
}

templ Sales() {
	{{
	chartOptions := charts.ChartOptions{
		Chart: charts.ChartConfig{
			Type:    charts.BarChartType,
			Height:  "100%",
			Toolbar: charts.Toolbar{Show: false},
		},
		Series: []charts.Series{
			{Name: "Expenses", Data: []interface{}{10.0, 50.0, 40.0, 98.654, 80.0, 90.0, 70.0, 85.0, 95.0, 88.0, 60.0, 45.0}},
		},
		XAxis: charts.XAxisConfig{
			Categories: []string{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"},
			Labels: &charts.XAxisLabelsConfig{
				Style: &charts.XAxisLabelStyleConfig{
					Colors:   "#6B7280",
					FontSize: mapping.Pointer("12px"),
				},
			},
		},
		YAxis: []charts.YAxisConfig{
			{
				Labels: &charts.YAxisLabelsConfig{
					Style: &charts.YAxisLabelStyleConfig{
						Colors:   "#6B7280",
						FontSize: mapping.Pointer("12px"),
					},
				},
			},
		},
		Colors: []string{"#DB2777"},
		DataLabels: &charts.DataLabels{
			Enabled: true,
			OffsetY: 10,
			Style: &charts.DataLabelStyle{
				Colors:     []string{"#000000"},
				FontSize:   "12px",
				FontWeight: "500",
			},
			DropShadow: &charts.DropShadow{
				Enabled: true,
				Top:     1,
				Left:    1,
				Blur:    1,
				Color:   "#000",
				Opacity: 0.25,
			},
		},
		Grid: &charts.GridConfig{
			BorderColor: "#E5E7EB",
		},
		PlotOptions: &charts.PlotOptions{
			Bar: &charts.BarConfig{
				BorderRadius: 6,
				ColumnWidth:  "50%",
				DataLabels: charts.BarLabels{
					Position: "top",
				},
			},
		},
	}
	}}
	<div class="bg-surface-100 shadow-lg rounded-lg p-6 w-full max-w-3xl">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-lg font-semibold text-gray-700">Expenses Over Time</h2>
			<div class="relative">
				<label>
					<select
						class="bg-surface-100 appearance-none border rounded-lg px-4 py-2 text-gray-600 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						<option>2024</option>
						<option>2023</option>
						<option>2022</option>
					</select>
				</label>
			</div>
		</div>
		@charts.Chart(charts.Props{Class: "w-full h-72", Options: chartOptions})
	</div>
}

templ Revenue() {
	{{
	chartOptions := charts.ChartOptions{
		Chart: charts.ChartConfig{
			Type:    charts.BarChartType,
			Height:  "100%",
			Toolbar: charts.Toolbar{Show: false},
		},
		Series: []charts.Series{
			{Name: "Expenses", Data: []interface{}{10.0, 50.0, 40.0, 98.654, 80.0, 90.0, 70.0, 85.0, 95.0, 88.0, 60.0, 45.0}},
		},
		XAxis: charts.XAxisConfig{
			Categories: []string{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"},
			Labels: &charts.XAxisLabelsConfig{
				Style: &charts.XAxisLabelStyleConfig{
					Colors:   "#6B7280",
					FontSize: mapping.Pointer("12px"),
				},
			},
		},
		YAxis: []charts.YAxisConfig{
			{
				Labels: &charts.YAxisLabelsConfig{
					Style: &charts.YAxisLabelStyleConfig{
						Colors:   "#6B7280",
						FontSize: mapping.Pointer("12px"),
					},
				},
			},
		},
		Colors: []string{"#DB2777"},
		DataLabels: &charts.DataLabels{
			Enabled: true,
			OffsetY: 10,
			Style: &charts.DataLabelStyle{
				Colors:     []string{"#000000"},
				FontSize:   "12px",
				FontWeight: "500",
			},
			DropShadow: &charts.DropShadow{
				Enabled: true,
				Top:     1,
				Left:    1,
				Blur:    1,
				Color:   "#000",
				Opacity: 0.25,
			},
		},
		Grid: &charts.GridConfig{
			BorderColor: "#E5E7EB",
		},
		PlotOptions: &charts.PlotOptions{
			Bar: &charts.BarConfig{
				BorderRadius: 6,
				ColumnWidth:  "50%",
				DataLabels: charts.BarLabels{
					Position: "top",
				},
			},
		},
	}
	}}
	<div class="bg-surface-100 shadow-lg rounded-lg p-6 w-full max-w-3xl">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-lg font-semibold text-gray-700">Expenses Over Time</h2>
			<div class="relative">
				<select class="bg-surface-100 appearance-none border rounded-lg px-4 py-2 text-gray-600 shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
					<option>2024</option>
					<option>2023</option>
					<option>2022</option>
				</select>
			</div>
		</div>
		@charts.Chart(charts.Props{Class: "w-full h-72", Options: chartOptions})
	</div>
}

templ DashboardContent(props *IndexPageProps) {
	<div>
		<div class="m-6">
			<h1 class="text-2xl font-semibold text-gray-700">
				Dashboard
			</h1>
			<div class="flex flex-col lg:flex-row items-center gap-4">
				@Revenue()
				@Sales()
			</div>
		</div>
	</div>
}

templ Index(props *IndexPageProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	@layouts.Authenticated(layouts.AuthenticatedProps{
		BaseProps: layouts.BaseProps{Title: pageCtx.T("Dashboard.Meta.Title")},
	}) {
		@DashboardContent(props)
	}
}
