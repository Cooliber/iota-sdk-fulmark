package dashboard

import (
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/pkg/composables"
)

type IndexPageProps struct {
}

templ Sales() {
	<div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-lg font-semibold text-gray-700">Expenses Over Time</h2>
			<div class="relative">
				<label>
					<select class="appearance-none border rounded-lg px-4 py-2 text-gray-600 bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
						<option>2024</option>
						<option>2023</option>
						<option>2022</option>
					</select>
				</label>
			</div>
		</div>
		<div id="sales" class="w-full h-72"></div>
	</div>
	<script>
    document.addEventListener('DOMContentLoaded', () => {
      const options = {
        chart: {
          type: 'bar',
          height: '100%',
          toolbar: { show: false },
        },
        series: [{
          name: 'Expenses',
          data: [10, 50, 40, 98.654, 80, 90, 70, 85, 95, 88, 60, 45] // Replace with your dynamic data
        }],
        xaxis: {
          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          labels: {
            style: {
              colors: '#6B7280', // Tailwind gray-500
              fontSize: '12px',
            },
          },
        },
        yaxis: {
          labels: {
            formatter: (value) => `${value}k`,
            style: {
              colors: '#6B7280',
              fontSize: '12px',
            },
          },
        },
        colors: ['#DB2777'], // Tailwind pink-600
        dataLabels: {
          enabled: true,
          formatter: (val) => `${val.toFixed(0)}$`, // Format with no decimal places
          style: {
            colors: ['#FFFFFF'], // White font
            fontSize: '12px',
            fontWeight: 'bold',
          },
          offsetY: -10, // Adjust position above the bar
          dropShadow: {
            enabled: true,
            top: 1,
            left: 1,
            blur: 1,
            color: '#000',
            opacity: 0.25
          }
        },
        grid: {
          borderColor: '#E5E7EB', // Tailwind gray-200
        },
        plotOptions: {
          bar: {
            borderRadius: 6,
            columnWidth: '50%',
            dataLabels: {
              position: 'top', // Place labels at the top of bars
            },
          },
        },
      };

      const chart = new ApexCharts(document.querySelector("#sales"), options);
      chart.render();
    });
  </script>
}

templ Revenue() {
	<div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl">
		<div class="flex justify-between items-center mb-4">
			<h2 class="text-lg font-semibold text-gray-700">Expenses Over Time</h2>
			<div class="relative">
				<select class="appearance-none border rounded-lg px-4 py-2 text-gray-600 bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
					<option>2024</option>
					<option>2023</option>
					<option>2022</option>
				</select>
			</div>
		</div>
		<div id="revenue" class="w-full h-72"></div>
	</div>
	<script>
    document.addEventListener('DOMContentLoaded', () => {
      const options = {
        chart: {
          type: 'bar',
          height: '100%',
          toolbar: { show: false },
        },
        series: [{
          name: 'Expenses',
          data: [10, 50, 40, 98.654, 80, 90, 70, 85, 95, 88, 60, 45] // Replace with your dynamic data
        }],
        xaxis: {
          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          labels: {
            style: {
              colors: '#6B7280', // Tailwind gray-500
              fontSize: '12px',
            },
          },
        },
        yaxis: {
          labels: {
            formatter: (value) => `${value}k`,
            style: {
              colors: '#6B7280',
              fontSize: '12px',
            },
          },
        },
        colors: ['#DB2777'], // Tailwind pink-600
        dataLabels: {
          enabled: true,
          formatter: (val) => `${val.toFixed(0)}$`, // Format with no decimal places
          style: {
            colors: ['#FFFFFF'], // White font
            fontSize: '12px',
            fontWeight: 'bold',
          },
          offsetY: -10, // Adjust position above the bar
          dropShadow: {
            enabled: true,
            top: 1,
            left: 1,
            blur: 1,
            color: '#000',
            opacity: 0.25
          }
        },
        grid: {
          borderColor: '#E5E7EB', // Tailwind gray-200
        },
        plotOptions: {
          bar: {
            borderRadius: 6,
            columnWidth: '50%',
            dataLabels: {
              position: 'top', // Place labels at the top of bars
            },
          },
        },
      };

      const chart = new ApexCharts(document.querySelector("#revenue"), options);
      chart.render();
    });
  </script>
}

templ DashboardContent(props *IndexPageProps) {
	<div>
		<div class="m-6">
			<h1 class="text-2xl font-semibold text-gray-700">
				Dashboard
			</h1>
			<div class="flex items-center gap-4">
				@Revenue()
				@Sales()
			</div>
		</div>
	</div>
}

templ Index(props *IndexPageProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	@layouts.Authenticated(layouts.AuthenticatedProps{
		Title: pageCtx.T("Dashboard.Meta.Title"),
	}) {
		@DashboardContent(props)
	}
}
