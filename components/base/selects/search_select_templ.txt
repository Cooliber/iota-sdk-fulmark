<li class=\"p-2 text-gray-500\">
</li>
<li x-on:click=\"
\" class=\"p-2 hover:bg-gray-100 cursor-pointer\">
</li>
<div x-data=\"{ open: false, query: &#39;&#39;, selectedId: &#39;&#39; }\" @click.away=\"open = false\" class=\"relative\" id=\"search-select\" endpoint=\"
\"><label class=\"block text-sm font-medium text-gray-700\">
</label> <input type=\"text\" placeholder=\"
\" x-model=\"query\" @input.debounce.300ms=\"fetchResults\" @focus=\"open = true\" class=\"border p-2 w-full mt-1\"> <input type=\"hidden\" x-model=\"selectedId\" name=\"position_id\"><ul x-show=\"open\" id=\"results-container\" class=\"absolute border bg-white w-full mt-1 max-h-60 overflow-auto\"><!-- Server-rendered results will be injected here --></ul></div><script>\n        function fetchResults() {\n            const endpoint = document.getElementById('search-select').getAttribute('endpoint');\n            if (this.query.length < 2) {\n                document.getElementById('results-container').innerHTML = '<li class=\"p-2 text-gray-500\">No results found.</li>';\n                return;\n            }\n            fetch(`${endpoint}?q=${encodeURIComponent(this.query)}`)\n                .then((response) => response.text())\n                .then((html) => {\n                    document.getElementById('results-container').innerHTML = html;\n                })\n                .catch((error) => {\n                    console.error('Error fetching results:', error);\n                    document.getElementById('results-container').innerHTML = '<li class=\"p-2 text-gray-500\">Error loading results.</li>';\n                });\n        }\n\n        function selectResult(name, id) {\n            const input = document.querySelector('[x-model=\"query\"]');\n            input.value = name;\n            input.dispatchEvent(new Event('input', { bubbles: true }));\n            this.selectedId = id;\n            this.open = false;\n            // Handle further actions, such as navigating or updating the UI.\n        }\n    </script>
