// Define the structure of our translations
export interface Translations {
  // Header
  chatbotTitle: string
  chatbotSubtitle: string

  // Welcome message
  welcomeGreeting: string
  welcomeMessage: string
  phoneRequestMessage: string

  // Input placeholders
  phoneInputPlaceholder: string
  messageInputPlaceholder: string

  // Buttons
  sendButton: string
  callbackRequestButton: string

  // Quick replies
  extendPolicyQuestion: string
  findContractNumberQuestion: string
  submitClaimQuestion: string

  // Callback modal
  callbackModalTitle: string
  callbackModalSubtitle: string
  callbackPhoneInputLabel: string
  dataPrivacyMessage: string
  dataProcessingConsent: string
  backButton: string
  requestCallButton: string

  // Messages
  callbackConfirmation: string
  errorLoadingMessages: string
  errorCreatingChat: string
  errorSendingMessage: string

  // Date formatting
  months: string[]
}

// Russian translations (default)
export const ru: Translations = {
  // Header
  chatbotTitle: "Ai chat bot",
  chatbotSubtitle: "–ù–∞—à AI-–±–æ—Ç –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ",

  // Welcome message
  welcomeGreeting: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Euroasia Insurance üëã",
  welcomeMessage: "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –ø–æ–ª–∏—Å–∞, —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.",
  phoneRequestMessage:
    "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Äî –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è —Å–≤—è–∑–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π.",

  // Input placeholders
  phoneInputPlaceholder: "+ 998 (__) ___ __ __",
  messageInputPlaceholder: "–°–æ–æ–±—â–µ–Ω–∏—è",

  // Buttons
  sendButton: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å",
  callbackRequestButton: "–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞",

  // Quick replies
  extendPolicyQuestion: "–ö–∞–∫ –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–ª–∏—Å?",
  findContractNumberQuestion: "–ì–¥–µ –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞?",
  submitClaimQuestion: "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–æ–π —Å–ª—É—á–∞–π?",

  // Callback modal
  callbackModalTitle: "–ó–∞–∫–∞–∂–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫",
  callbackModalSubtitle: "–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
  callbackPhoneInputLabel: "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
  dataPrivacyMessage: "–ú—ã –Ω–µ –ø–µ—Ä–µ–¥–∞—ë–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º",
  dataProcessingConsent: "–°–æ–≥–ª–∞—Å–µ–Ω(–∞) —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
  backButton: "–ù–∞–∑–∞–¥",
  requestCallButton: "–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫",

  // Messages
  callbackConfirmation: "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø—Ä–æ—Å! –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –ø–æ –Ω–æ–º–µ—Ä—É {phone} –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
  errorLoadingMessages: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
  errorCreatingChat: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
  errorSendingMessage: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",

  // Date formatting
  months: [
    "–Ø–Ω–≤–∞—Ä—å",
    "–§–µ–≤—Ä–∞–ª—å",
    "–ú–∞—Ä—Ç",
    "–ê–ø—Ä–µ–ª—å",
    "–ú–∞–π",
    "–ò—é–Ω—å",
    "–ò—é–ª—å",
    "–ê–≤–≥—É—Å—Ç",
    "–°–µ–Ω—Ç—è–±—Ä—å",
    "–û–∫—Ç—è–±—Ä—å",
    "–ù–æ—è–±—Ä—å",
    "–î–µ–∫–∞–±—Ä—å",
  ],
}

// Uzbek translations
export const uz: Translations = {
  // Header
  chatbotTitle: "AI suhbat boti",
  chatbotSubtitle: "Bizning AI-botimiz sizga 24/7 yordam berishga tayyor",

  // Welcome message
  welcomeGreeting: "Salom! Men Euroasia Insurance virtual yordamchisiman üëã",
  welcomeMessage:
    "Sug'urta polisini rasmiylashtirish, narxni hisoblash va har qanday savollar bo'yicha yordam berishga tayyorman.",
  phoneRequestMessage:
    "Boshlash uchun, iltimos, telefon raqamingizni kiriting ‚Äî biz undan aloqa va murojaat tarixini saqlash uchun foydalanamiz.",

  // Input placeholders
  phoneInputPlaceholder: "+ 998 (__) ___ __ __",
  messageInputPlaceholder: "Xabarlar",

  // Buttons
  sendButton: "Yuborish",
  callbackRequestButton: "Qayta qo'ng'iroq so'rovi",

  // Quick replies
  extendPolicyQuestion: "Polisni qanday uzaytirish mumkin?",
  findContractNumberQuestion: "Shartnoma raqamini qayerdan topish mumkin?",
  submitClaimQuestion: "Sug'urta hodisasi bo'yicha arizani qanday topshirish kerak?",

  // Callback modal
  callbackModalTitle: "Qayta qo'ng'iroq buyurtma qiling",
  callbackModalSubtitle:
    "Telefon raqamingizni qoldiring, va bizning mutaxassisimiz siz bilan yaqin vaqt ichida bog'lanadi",
  callbackPhoneInputLabel: "Telefon raqamini kiriting",
  dataPrivacyMessage: "Biz sizning ma'lumotlaringizni uchinchi shaxslarga bermaydi",
  dataProcessingConsent: "Shaxsiy ma'lumotlarni qayta ishlashga roziman",
  backButton: "Orqaga",
  requestCallButton: "Qo'ng'iroq buyurtma qilish",

  // Messages
  callbackConfirmation:
    "So'rov uchun rahmat! Mutaxassisimiz {phone} raqami orqali siz bilan yaqin vaqt ichida bog'lanadi.",
  errorLoadingMessages: "Xabarlar tarixini yuklab bo'lmadi. Iltimos, keyinroq qayta urinib ko'ring.",
  errorCreatingChat: "Chat yaratishda xatolik yuz berdi. Iltimos, keyinroq qayta urinib ko'ring.",
  errorSendingMessage: "Kechirasiz, xabar yuborishda xatolik yuz berdi. Iltimos, keyinroq qayta urinib ko'ring.",

  // Date formatting
  months: [
    "Yanvar",
    "Fevral",
    "Mart",
    "Aprel",
    "May",
    "Iyun",
    "Iyul",
    "Avgust",
    "Sentabr",
    "Oktabr",
    "Noyabr",
    "Dekabr",
  ],
}

// English translations
export const en: Translations = {
  // Header
  chatbotTitle: "AI chat bot",
  chatbotSubtitle: "Our AI bot is ready to help you 24/7",

  // Welcome message
  welcomeGreeting: "Hello! I'm the virtual assistant of Euroasia Insurance üëã",
  welcomeMessage: "I'm ready to help you with policy registration, cost calculation, and any questions you may have.",
  phoneRequestMessage:
    "To get started, please enter your phone number ‚Äî we use it for communication and to save your request history.",

  // Input placeholders
  phoneInputPlaceholder: "+ 998 (__) ___ __ __",
  messageInputPlaceholder: "Messages",

  // Buttons
  sendButton: "Send",
  callbackRequestButton: "Request a callback",

  // Quick replies
  extendPolicyQuestion: "How to extend my policy?",
  findContractNumberQuestion: "Where to find my contract number?",
  submitClaimQuestion: "How to submit an insurance claim?",

  // Callback modal
  callbackModalTitle: "Request a callback",
  callbackModalSubtitle: "Leave your phone number, and our specialist will contact you shortly",
  callbackPhoneInputLabel: "Enter phone number",
  dataPrivacyMessage: "We don't share your data with third parties",
  dataProcessingConsent: "I agree to the processing of personal data",
  backButton: "Back",
  requestCallButton: "Request call",

  // Messages
  callbackConfirmation: "Thank you for your request! Our specialist will contact you at {phone} shortly.",
  errorLoadingMessages: "Failed to load message history. Please try again later.",
  errorCreatingChat: "An error occurred while creating the chat. Please try again later.",
  errorSendingMessage: "Sorry, an error occurred while sending the message. Please try again later.",

  // Date formatting
  months: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ],
}

// Map of all available translations
export const translations: Record<string, Translations> = {
  ru,
  uz,
  en,
}

// Function to get translations for a specific locale
export function getTranslations(locale: string): Translations {
  return translations[locale] || en // Fallback to English if locale not found
}
