scalar Upload

type Media {
    id: ID!
    name: String!
    path: String!
    mimetype: String!
    size: Int64!
    createdAt: Time!
    updatedAt: Time!
}

type PaginatedMedia {
    data: [Media!]!
    total: Int64!
}

extend type Query {
    upload(id: ID!): Media
    uploads(offset: Int!, limit: Int!, sortBy: [String!]): PaginatedMedia!
}

extend type Mutation {
    uploadFile(file: Upload!): Media!
    deleteUpload(id: ID!): Media!
}

extend type Subscription {
    uploadCreated: Media!
    uploadUpdated: Media!
    uploadDeleted: Media!
}