package users

import (
	"github.com/iota-agency/iota-erp/internal/domain/entities/role"
	"github.com/iota-agency/iota-erp/internal/domain/entities/user"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/button"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/input"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
	"github.com/nicksnyder/go-i18n/v2/i18n"
	"strconv"
)

templ CreateForm(localizer *i18n.Localizer, user user.User, roles []*role.Role, errors map[string]string) {
	<form class="flex flex-col justify-between h-full" hx-post="/users" hx-swap="outerHTML" hx-indicator="#save-btn">
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Text(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.FirstName"}),
				Attrs: templ.Attributes{"name": "firstName", "value": user.FirstName},
				Error: errors["firstName"],
			})
			@input.Text(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.LastName"}),
				Attrs: templ.Attributes{"name": "lastName", "value": user.LastName},
				Error: errors["lastName"],
			})
			@input.Email(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.Email"}),
				Attrs: templ.Attributes{
					"name":  "email",
					"value": user.Email,
				},
				Error: errors["email"],
			})
			@input.Password(&input.Props{Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.Password"}),
				Placeholder: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.EnterPassword"}),
				Attrs: templ.Attributes{
					"autocomplete": "new-password",
					"name":         "password",
				},
				Error: errors["password"],
			})
			@base.Select(&base.SelectProps{
				Label:       localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.Role"}),
				Placeholder: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Users.Single.SelectRole"}),
				Attrs: templ.Attributes{
					"name": "roleId",
				},
			}) {
				for _, role := range roles {
					<option value={ strconv.Itoa(int(role.Id)) }>{ role.Name }</option>
				}
			}
		}
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			@button.Primary(button.Props{
				Size: button.SizeMD,
				Attrs: templ.Attributes{
					"id": "save-btn",
				},
			}) {
				{ localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Save"}) }
			}
		</div>
	</form>
}

templ New(pageCtx *types.PageContext, roles []*role.Role, errors map[string]string) {
	@layouts.Authenticated(pageCtx) {
		@CreateForm(pageCtx.Localizer, user.User{}, roles, errors)
	}
}
