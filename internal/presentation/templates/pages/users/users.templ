package users

import (
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
	"github.com/nicksnyder/go-i18n/v2/i18n"
	"github.com/iota-agency/iota-erp/internal/domain/user"
	"time"
	"fmt"
)

templ Index(pageContext *types.PageContext, users []*user.User) {
	@layouts.Authenticated(pageContext) {
		<div class="p-6">
			<h1 class="text-2xl font-medium">
				{ pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "NavigationLinks.Users"}) }
			</h1>
			<div class="mt-5 table-bg">
				<section></section>
        @base.Table([]*base.TableColumn{
          {Label: pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "FullName"}), Key: "fullName"},
          {Label: pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "LastAction"}), Key: "lastAction"},
          {Label: pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "UpdatedAt"}), Key: "updatedAt"},
          {Label: pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Actions"})},
        }) {
          for _, user := range users {
            @base.TableRow() {
              @base.TableCell() {
                {user.FullName()}
              }
              @base.TableCell() {
								if v := user.LastAction; v != nil {
									<div x-data="relativeformat">
										<span x-text={fmt.Sprintf("format('%s')", v.Format(time.RFC3339))}></span>
									</div>
								} else {
									{pageContext.Localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Unknown"})}
								}
              }
              @base.TableCell() {
								<div x-data="relativeformat">
									<span x-text={fmt.Sprintf("format('%s')", user.UpdatedAt.Format(time.RFC3339))}></span>
								</div>
              }
              @base.TableCell() {
								<div>
									Edit
								</div>
              }
            }
          }
        }
			</div>
		</div>
	}
}
