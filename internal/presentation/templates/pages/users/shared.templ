package users

import (
	"github.com/iota-agency/iota-erp/internal/domain/aggregates/role"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
	"strconv"
)

type RoleSelectProps struct {
	*types.PageContext
	Roles    []*role.Role
	Selected []*role.Role
	Error    string
}

func isRoleSelected(id uint, roles []*role.Role) bool {
	for _, role := range roles {
		if role.ID == id {
			return true
		}
	}
	return false
}

templ RoleSelect(props *RoleSelectProps) {
	@base.Select(&base.SelectProps{
		Label:       props.T("Users.Single.Role"),
		Placeholder: props.T("Users.Single.SelectRole"),
		Error:       props.Error,
		Attrs: templ.Attributes{
			"name": "RoleID",
		},
	}) {
		for _, role := range props.Roles {
			if isRoleSelected(role.ID, props.Selected) {
				<option value={ strconv.Itoa(int(role.ID)) } selected>{ role.Name }</option>
			} else {
				<option value={ strconv.Itoa(int(role.ID)) }>{ role.Name }</option>
			}
		}
	}
}
