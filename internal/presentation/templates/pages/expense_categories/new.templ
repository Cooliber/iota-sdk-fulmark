package expense_categories

import (
	"github.com/iota-agency/iota-erp/internal/domain/entities/currency"
	category "github.com/iota-agency/iota-erp/internal/domain/entities/expense_category"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/button"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/input"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/textarea"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
	"github.com/nicksnyder/go-i18n/v2/i18n"
)

templ CreateForm(localizer *i18n.Localizer, expenseCategory *category.ExpenseCategory, currencies []*currency.Currency, errors map[string]string) {
	<form class="flex flex-col justify-between h-full" hx-post="/finance/expense-categories" hx-swap="outerHTML" hx-indicator="#save-btn">
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Text(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Name"}),
				Attrs: templ.Attributes{"name": "Name", "value": expenseCategory.Name},
				Error: errors["Name"],
			})
			@input.Number(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Amount"}),
				Attrs: templ.Attributes{"name": "Amount", "value": expenseCategory.Amount},
				Error: errors["Amount"],
			})
			@base.Select(&base.SelectProps{
				Label:       localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Currency"}),
				Placeholder: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.SelectCurrency"}),
				Attrs: templ.Attributes{
					"name": "CurrencyCode",
				},
			}) {
				for _, currency := range currencies {
					<option value={ currency.Code.String() }>{ currency.Code.String() }</option>
				}
			}
			@textarea.Basic(&textarea.Props{
				Label:        localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Description"}),
				Attrs:        templ.Attributes{"name": "Description", "value": expenseCategory.Description},
				WrapperClass: "col-span-3",
				Error:        errors["Description"],
			})
		}
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			@button.Primary(button.Props{
				Size: button.SizeMD,
				Attrs: templ.Attributes{
					"id": "save-btn",
				},
			}) {
				{ localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Save"}) }
			}
		</div>
	</form>
}

templ New(pageCtx *types.PageContext, currencies []*currency.Currency, errors map[string]string) {
	@layouts.Authenticated(pageCtx) {
		@CreateForm(pageCtx.Localizer, &category.ExpenseCategory{}, currencies, errors)
	}
}
