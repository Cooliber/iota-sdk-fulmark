package expense_categories

import (
	"fmt"
	"github.com/iota-agency/iota-erp/internal/domain/expense_category"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/button"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/dialog"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/input"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/icons"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
	"github.com/nicksnyder/go-i18n/v2/i18n"
)

templ EditForm(localizer *i18n.Localizer, category *category.ExpenseCategory, errors map[string]string) {
	<div class="flex flex-col justify-between h-full" id="edit-content">
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Text(&input.Props{
				Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Name"}),
				Attrs: templ.Attributes{
					"value": category.Name,
					"name":  "name",
					"form":  "save-form",
				},
				Error: errors["name"],
			})
			@input.Number(&input.Props{
            	Label: localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "ExpenseCategories.Single.Amount"}),
                Attrs: templ.Attributes{"name": "amount", "value": category.Amount},
                Error: errors["amount"],
            })
		}
		<div x-data class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			<form
				id="delete-form"
				hx-delete={ fmt.Sprintf("/expense-categories/%d", category.Id) }
				hx-trigger="submit"
				hx-target="closest .content"
				hx-swap="innerHTML"
				hx-indicator="#delete-category-btn"
				hx-disabled-elt="find button"
			>
				@button.Danger(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":   "_action",
						"value":  "delete",
						"type":   "button",
						"@click": "$dispatch('open-delete-category-confirmation')",
						"id":     "delete-category-btn",
					},
				}) {
					{ localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Delete"}) }
				}
			</form>
			<form id="save-form" method="post" hx-post={ fmt.Sprintf("/finance/expense-categories/%d", category.Id) } hx-indicator="#save-btn" hx-target="#edit-content" hx-swap="outerHTML">
				@button.Primary(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":  "_action",
						"value": "save",
						"id":    "save-btn",
					},
				}) {
					{ localizer.MustLocalize(&i18n.LocalizeConfig{MessageID: "Save"}) }
				}
			</form>
		</div>
	</div>
}

templ Edit(pageCtx *types.PageContext, category *category.ExpenseCategory, errors map[string]string) {
	@layouts.Authenticated(pageCtx) {
		@EditForm(pageCtx.Localizer, category, errors)
		@dialog.Confirmation(&dialog.Props{
			Heading:   "ExpenseCategories.Single.DeleteCategory",
			Text:      "ExpenseCategories.Single.DeleteCategoryConfirmation",
			Localizer: pageCtx.Localizer,
			Icon:      icons.Trash(icons.Props{Size: "20"}),
			Action:    "open-delete-category-confirmation",
			Attrs: templ.Attributes{
				"@closing": `({target}) => {
					if (target.returnValue === "confirm") {
						let deleteForm = document.getElementById("delete-form");
						htmx.trigger(deleteForm, "submit");
					}
				}`,
			},
		})
	}
}