package accounts

import (
	"fmt"
	"github.com/iota-agency/iota-erp/internal/domain/entities/currency"
	category "github.com/iota-agency/iota-erp/internal/domain/entities/expense_category"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/button"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/dialog"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/input"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/textarea"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/icons"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/internal/presentation/types"
)

type EditPageProps struct {
	*types.PageContext
	Category   *category.ExpenseCategory
	Currencies []*currency.Currency
	Errors     map[string]string
}

templ EditForm(props *EditPageProps) {
	<div class="flex flex-col justify-between h-full" id="edit-content">
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Text(&input.Props{
				Label: props.T("ExpenseCategories.Single.Name"),
				Attrs: templ.Attributes{
					"value": props.Category.Name,
					"name":  "Name",
					"form":  "save-form",
				},
				Error: props.Errors["Name"],
			})
			@input.Number(&input.Props{
				Label: props.T("ExpenseCategories.Single.Amount"),
				Attrs: templ.Attributes{
					"name":  "Amount",
					"value": fmt.Sprintf("%.2f", props.Category.Amount),
					"form":  "save-form",
				},
				Error: props.Errors["Amount"],
			})
			@CurrencySelect(&CurrencySelectProps{
				PageContext: props.PageContext,
				Value:       props.Category.Currency.Code.String(),
				Currencies:  props.Currencies,
				Attrs: templ.Attributes{
					"name": "CurrencyCode",
					"form": "save-form",
				},
			})
			@textarea.Basic(&textarea.Props{
				Label: props.T("ExpenseCategories.Single.Description"),
				Attrs: templ.Attributes{
					"name": "Description",
					"form": "save-form",
				},
				Value:        props.Category.Description,
				WrapperClass: "col-span-3",
				Error:        props.Errors["Description"],
			})
		}
		<div x-data class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			<form
				id="delete-form"
				hx-delete={ fmt.Sprintf("/finance/expense-categories/%d", props.Category.Id) }
				hx-trigger="submit"
				hx-target="closest .content"
				hx-swap="innerHTML"
				hx-indicator="#delete-category-btn"
				hx-disabled-elt="find button"
			>
				@button.Danger(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":   "_action",
						"value":  "delete",
						"type":   "button",
						"@click": "$dispatch('open-delete-category-confirmation')",
						"id":     "delete-category-btn",
					},
				}) {
					{ props.T("Delete") }
				}
			</form>
			<form id="save-form" method="post" hx-post={ fmt.Sprintf("/finance/expense-categories/%d", props.Category.Id) } hx-indicator="#save-btn" hx-target="#edit-content" hx-swap="outerHTML">
				@button.Primary(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":  "_action",
						"value": "save",
						"id":    "save-btn",
					},
				}) {
					{ props.T("Save") }
				}
			</form>
		</div>
	</div>
}

templ Edit(props *EditPageProps) {
	@layouts.Authenticated(props.PageContext) {
		@EditForm(props)
		@dialog.Confirmation(&dialog.Props{
			Heading:   "ExpenseCategories.Single.Delete",
			Text:      "ExpenseCategories.Single.DeleteConfirmation",
			Localizer: props.Localizer,
			Icon:      icons.Trash(icons.Props{Size: "20"}),
			Action:    "open-delete-category-confirmation",
			Attrs: templ.Attributes{
				"@closing": `({target}) => {
					if (target.returnValue === "confirm") {
						let deleteForm = document.getElementById("delete-form");
						htmx.trigger(deleteForm, "submit");
					}
				}`,
			},
		})
	}
}
