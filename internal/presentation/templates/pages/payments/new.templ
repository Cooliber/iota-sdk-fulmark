package payments

import (
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/button"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/input"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/components/base/textarea"
	"github.com/iota-agency/iota-erp/internal/presentation/templates/layouts"
	"github.com/iota-agency/iota-erp/pkg/composables"
	"github.com/iota-agency/iota-erp/internal/presentation/viewmodels"
)

type CreatePageProps struct {
	*composables.PageContext
	Payment  *viewmodels.Payment
	Stages   []*viewmodels.ProjectStage
	Accounts []*viewmodels.MoneyAccount
	Errors   map[string]string
}

templ CreateForm(props *CreatePageProps) {
	<div class="flex flex-col justify-between h-full" id="new-content">
		@base.Card("grid grid-cols-3 gap-4 m-6") {
			@input.Number(&input.Props{
				Label: props.T("Payments.Single.Amount"),
				Attrs: templ.Attributes{
					"value": props.Payment.Amount,
					"name":  "Amount",
					"form":  "save-form",
				},
				Error: props.Errors["Amount"],
			})
			@input.Date(&input.Props{
				Label: props.T("Payments.Single.Date"),
				Attrs: templ.Attributes{
					"value": props.Payment.TransactionDate,
					"name":  "Date",
					"form":  "save-form",
				},
				Error: props.Errors["Date"],
			})
			@StageSelect(&StageSelectProps{
				PageContext: props.PageContext,
				Value:       props.Payment.StageID,
				Stages:      props.Stages,
				Attrs: templ.Attributes{
					"name": "StageId",
					"form": "save-form",
				},
			})
			@AccountSelect(&AccountSelectProps{
				PageContext: props.PageContext,
				Value:       props.Payment.AccountID,
				Accounts:    props.Accounts,
				Attrs: templ.Attributes{
					"name": "AccountId",
					"form": "save-form",
				},
			})
			@textarea.Basic(&textarea.Props{
				Label: props.T("Payments.Single.Comment"),
				Attrs: templ.Attributes{
					"value": props.Payment.Comment,
					"name":  "Comment",
					"form":  "save-form",
				},
				WrapperClass: "col-span-3",
			})
		}
		<div
			x-data
			class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4"
		>
			<form
				id="save-form"
				method="post"
				hx-post="/finance/payments"
				hx-indicator="#save-btn"
				hx-target="#new-content"
				hx-swap="outerHTML"
			>
				@button.Primary(button.Props{
					Size: button.SizeMD,
					Attrs: templ.Attributes{
						"name":  "_action",
						"value": "save",
						"id":    "save-btn",
					},
				}) {
					{ props.T("Save") }
				}
			</form>
		</div>
	</div>
}

templ New(props *CreatePageProps) {
	@layouts.Authenticated(props.PageContext) {
		@CreateForm(props)
	}
}
